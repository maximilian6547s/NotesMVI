import dependencies.AnnotationProcessing
import dependencies.Dependencies
import dependencies.Versions
import dependencies.AndroidTestDependencies
import dependencies.Application
import dependencies.Java
import dependencies.SupportDependencies

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion Versions.compilesdk
    defaultConfig {
        applicationId Application.id
        minSdkVersion Versions.minsdk
        targetSdkVersion Versions.targetsdk
        versionCode Application.version_code
        versionName Application.version_name

        testInstrumentationRunner AndroidTestDependencies.instrumentation_runner
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = Java.java_version
    }
}

dependencies {

    // Kotlin
    implementation Dependencies.kotlin_standard_library
    implementation Dependencies.kotlin_reflect
    implementation Dependencies.ktx

    //dependencies
    implementation Dependencies.dagger

    //Annotation processing
    kapt AnnotationProcessing.dagger_compiler
    implementation Dependencies.firebase_firestore
    implementation Dependencies.firebase_auth
    implementation Dependencies.firebase_analytics
    implementation Dependencies.firebase_crashlytics

    // Support
    implementation SupportDependencies.appcompat
    implementation SupportDependencies.constraintlayout
    implementation SupportDependencies.material_design
    implementation SupportDependencies.swipe_refresh_layout

}